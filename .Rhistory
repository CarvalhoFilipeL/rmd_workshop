sessionInfo()
knitr::opts_chunk$set(echo = TRUE)
# knitr::opts_chunk$set(echo = TRUE, fig.width = 12, fig.height = 12)
data <- read.csv("data/counts.rpkm.csv", header=T, row.names=1)
meta <- read.csv("data/mouse_exp_design.csv", header=T, row.names=1)
kable(meta, format="markdown")
knitr::opts_chunk$set(echo = TRUE)
# knitr::opts_chunk$set(echo = TRUE, fig.width = 12, fig.height = 12)
### Bioconductor and CRAN libraries used
library(knitr)
library(ggplot2)
meta
kable(meta, format="markdown")
load("/Users/filipecarvalho/Downloads/Rmarkdown_data.Rdata")
library(pheatmap)
library(tidyverse)
library(pheatmap)
load("data/Rmarkdown_data.Rdata")
load("data/Rmarkdown_data.Rdata")
load("~/rmd_workshop/data/Rmarkdown_data.Rdata")
load("~/rmd_workshop/data/Rmarkdown_data.Rdata")
## Get names of top 20 genes
top20_sigOE_genes <- res_tableOE_tb %>%
arrange(padj) %>% 	#Arrange rows by padj values
pull(gene) %>% 		#Extract character vector of ordered genes
head(n=20)
## normalized counts for top 20 significant genes
top20_sigOE_norm <- normalized_counts %>%
filter(gene %in% top20_sigOE_genes)
## Gathering the columns to have normalized counts to a single column
gathered_top20_sigOE <- top20_sigOE_norm %>%
gather(colnames(top20_sigOE_norm)[2:9], key = "samplename", value = "normalized_counts")
gathered_top20_sigOE <- inner_join(mov10_meta, gathered_top20_sigOE)
ggplot(gathered_top20_sigOE) +
geom_point(aes(x = gene, y = normalized_counts, color = sampletype)) +
scale_y_log10() +
xlab("Genes") +
ylab("log10 Normalized Counts") +
ggtitle("Top 20 Significant DE Genes") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(plot.title = element_text(hjust = 0.5))
res_tableOE_tb_sig <- res_tableOE_tb %>%
filter(padj < 0.05)
norm_OEsig <- normalized_counts %>%
filter(gene %in% res_tableOE_tb_sig$gene)
meta <- mov10_meta %>%
column_to_rownames("samplename") %>%
data.frame()
pheatmap(norm_OEsig[2:9],
cluster_rows = T,
show_rownames = F,
annotation = meta,
border_color = NA,
fontsize = 10,
scale = "row",
fontsize_row = 10,
height = 20)
samples (2:4 and 7:9)
sessionInfo()
norm_OEsig <- normalized_counts %>%
filter(gene %in% res_tableOE_tb_sig$gene)
meta <- mov10_meta %>%
column_to_rownames("samplename") %>%
data.frame()
pheatmap(norm_OEsig[2:9],
cluster_rows = T,
show_rownames = F,
annotation = meta,
border_color = NA,
fontsize = 10,
scale = "row",
fontsize_row = 10,
height = 20)
samples (2:4 and 7:9)
samples (2:4, 7:9)
samples (2:4  7:9)
samples(2:4 and 7:9)
samples(2:4 7:9)
samples(2:4, 7:9)
library(tidyverse)
library(pheatmap)
load("~/rmd_workshop/data/Rmarkdown_data.Rdata")
top20_sigOE_genes <- res_tableOE_tb %>%
arrange(padj) %>% 	#Arrange rows by padj values
pull(gene) %>% 		#Extract character vector of ordered genes
head(n=20)
top20_sigOE_norm <- normalized_counts %>%
filter(gene %in% top20_sigOE_genes)
gathered_top20_sigOE <- top20_sigOE_norm %>%
gather(colnames(top20_sigOE_norm)[2:9], key = "samplename", value = "normalized_counts")
gathered_top20_sigOE <- inner_join(mov10_meta, gathered_top20_sigOE)
ggplot(gathered_top20_sigOE) +
geom_point(aes(x = gene, y = normalized_counts, color = sampletype)) +
scale_y_log10() +
xlab("Genes") +
ylab("log10 Normalized Counts") +
ggtitle("Top 20 Significant DE Genes") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(plot.title = element_text(hjust = 0.5))
samples(2:4, 7:9)
# Packages
library(plyr)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(maftools)
# CRAN packages
library(data.table)
library(pheatmap)
# Bioconductor packages
library(BSgenome.Hsapiens.1000genomes.hs37d5)
library(SomaticSignatures)
library(SomaticCancerAlterations)
library(VariantAnnotation)
setwd("/Users/filipecarvalho/maf/")
input_path <- "/Users/filipecarvalho/maf/"
input_suffix <- "*.commonfilter.pass.maf"
file_list_passmaf <- list.files(path = input_path, pattern = input_suffix)
file_list_passmaf <- paste(input_path, file_list_passmaf, sep = "")
file_list_passmaf
df=data.frame()
for(i in 1:length(file_list_passmaf)) {
df_tmp <- read.table(file_list_passmaf[i], sep = "\t",header = TRUE, comment.char = "#", skipNul = FALSE, fill = TRUE, quote = "", row.names = NULL, stringsAsFactors = FALSE, na.strings = c("","NA"))
df <- rbind(df,df_tmp)
rm(df_tmp)
}
df <- mutate(df, total_reads = df$t_alt_count + df$t_ref_count)
df_reduced <- subset(df, total_reads >= 14)
dim(df_reduced)
df_snv <- subset(df_reduced, subset = Variant_Classification %in% c("Silent", "5'UTR", "Missense_Mutation", "Splice_Site", "3'UTR",
"Intron", "RNA", "IGR", "5'Flank", "lincRNA", "Start_Codon_SNP",
"De_novo_Start_OutOfFrame", "De_novo_Start_InFrame", "Nonstop_Mutation")) %>% select(Tumor_Sample_Barcode, Variant_Classification)
dim(df_snv)
## Calculate the number of SNVs and indels  (this will later be used to plot indels/snv ratios)
df_snv <- subset(df_reduced, subset = Variant_Classification %in% c("Silent", "5'UTR", "Missense_Mutation", "Splice_Site", "3'UTR",
"Intron", "RNA", "IGR", "5'Flank", "lincRNA", "Start_Codon_SNP",
"De_novo_Start_OutOfFrame", "De_novo_Start_InFrame", "Nonstop_Mutation"))
df_indels <- subset(df_reduced, subset = Variant_Classification %in% c("In_Frame_Del", "In_Frame_Ins", "Frame_Shift_Del", "Frame_Shift_Ins")) %>% select(Tumor_Sample_Barcode, Variant_Classification)
dim(df_indels)
library(tidyverse)
df_indels <- subset(df_reduced, subset = Variant_Classification %in% c("In_Frame_Del", "In_Frame_Ins", "Frame_Shift_Del", "Frame_Shift_Ins")) %>% select(Tumor_Sample_Barcode, Variant_Classification)
dim(df_indels)
xrt_bca_maf <- read.maf(maf = df_reduced)
xrt_bca_maf
plotmafSummary(maf = xrt_bca_maf, rmOutlier = TRUE, addStat = 'median', dashboard = TRUE, titvRaw = FALSE)
oncoplot(maf = xrt_bca_maf, top = 10)
## Maftools df_reduced for TCGA bladder cancer genes
bca_genes <- c("TP53", "KMT2D", "KDM6A", "ARID1A", "PIK3CA", "KMT2C", "RB1", "EP300", "FGFR3", "STAG2", "ATM", "FAT1", "ELF3", "CREBBP", "ERBB2", "SPTAN1", "KMT2A", "ERBB3", "ERCC2", "CDKN1A", "ASXL2", "TSC1", "FBXW7")
## RColorBrewer color pallet for variant classifications
vc_col <- RColorBrewer::brewer.pal(n=6, name = "Dark2")
names(vc_col) <- c("Frame_Shift_Ins", "Frame_Shift_Del", "Missense_Mutation", "Splice_Site", "Nonsense_Mutation", "Multi_Hit")
print(vc_col)
oncoplot(maf = xrt_bca_maf, colors= vc_col, genes = bca_genes, draw_titv = TRUE)
## Maftools df_reduced for ALL DNA damage response genes
dnarepair_genes <- c("MLH1", "MSH2", "MSH6", "PMS1", "PMS2", "ERCC2", "ERCC3", "ERCC4", "ERCC5", "BRCA1", "BRCA2", "MRE11A", "NBN", "RAD50", "RAD51", "RAD51B", "RAD51D", "RAD52", "RAD54L", "BRIP1", "FANCA", "FANCC", "PALB2", "RAD51C", "BLM", "ATM", "ATR", "CHEK1", "CHEK2", "MDC1", "POLE", "MUTYH", "PARP1", "RECQL4")
## RColorBrewer color pallet for variant classifications
vc_col <- RColorBrewer::brewer.pal(n=6, name = "Dark2")
names(vc_col) <- c("Frame_Shift_Ins", "Frame_Shift_Del", "Missense_Mutation", "Splice_Site", "Nonsense_Mutation", "Multi_Hit")
print(vc_col)
oncoplot(maf = xrt_bca_maf, colors= vc_col, genes = dnarepair_genes, draw_titv = TRUE)
## Maftools df_reduced for MUTATED DNA damage response genes
dnarepair_mutated <- c("FANCA", "MSH6", "CHEK2", "BRCA1", "PALB2", "POLE", "RAD54L", "ERCC5", "BRCA2", "ATM", "MSH2", "ERCC2", "RAD51B", "MDC1")
## RColorBrewer color pallet for variant classifications
vc_col <- RColorBrewer::brewer.pal(n=6, name = "Dark2")
names(vc_col) <- c("Frame_Shift_Ins", "Frame_Shift_Del", "Missense_Mutation", "Splice_Site", "Nonsense_Mutation", "Multi_Hit")
print(vc_col)
oncoplot(maf = xrt_bca_maf, colors= vc_col, genes = dnarepair_mutated, draw_titv = TRUE)
## Maftools df_reduced for MUTATED DNA damage response genes
dnarepair_mutated <- c("FANCA", "MSH6", "CHEK2", "BRCA1", "PALB2", "POLE", "RAD54L", "ERCC5", "BRCA2", "ATM", "MSH2", "ERCC2", "RAD51B", "MDC1")
## RColorBrewer color pallet for variant classifications
vc_col <- RColorBrewer::brewer.pal(n=6, name = "Dark2")
names(vc_col) <- c("Frame_Shift_Ins", "Frame_Shift_Del", "Missense_Mutation", "Splice_Site", "Nonsense_Mutation", "Multi_Hit")
print(vc_col)
oncoplot(maf = xrt_bca_maf, colors= vc_col, genes = dnarepair_mutated, draw_titv = TRUE)
## Transitions transversions
xrt_bca_maf.titv = titv(maf = xrt_bca_maf, plot = FALSE, useSyn = TRUE)
## plot titv summary
plotTiTv(res = xrt_bca_maf.titv)
## lollipop plot for TP53
lollipopPlot(maf = xrt_bca_maf, gene = 'TP53', AACol = 'Protein_Change', showMutationRate = TRUE)
## lollipop plot for ERCC2
lollipopPlot(maf = xrt_bca_maf, gene = 'ERCC2', AACol = 'Protein_Change', showMutationRate = TRUE)
## lollipop plot for KDM6A
lollipopPlot(maf = xrt_bca_maf, gene = 'KDM6A', AACol = 'Protein_Change', showMutationRate = TRUE)
## Mutation load against TCGA
xrt_bca_mutload <- tcgaCompare(maf = xrt_bca_maf, cohortName = "Mouw_xrt_Bca")
## Somatic interactions exclusive/co-occurance events analysis on top10 mutated genes (performs pair-wise Fishers exact to detect significant pairs of genes)
somaticInteractions(maf = xrt_bca_maf,top = 25, pvalue = 0.05)
## Oncogenic signaling pathways
OncogenicPathways(maf = xrt_bca_maf)
## Oncogenic signaling pathways
OncogenicPathways(maf = xrt_bca_maf)
PlotOncogenicPathways(maf = xrt_bca_maf, pathways = "RTK-RAS")
PlotOncogenicPathways(maf = xrt_bca_maf, pathways = "NOTCH")
PlotOncogenicPathways(maf = xrt_bca_maf, pathways = "PI3K")
PlotOncogenicPathways(maf = xrt_bca_maf, pathways = "TP53")
PlotOncogenicPathways(maf = xrt_bca_maf, pathways = "Cell_Cycle")
PlotOncogenicPathways(maf = xrt_bca_maf, pathways = "WNT")
PlotOncogenicPathways(maf = xrt_bca_maf, pathways = "Hippo")
PlotOncogenicPathways(maf = xrt_bca_maf, pathways = "MYC")
## ===========================================================
## Mutational signatures
if(!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("BSgenome.Hsapiens.UCSC.hg19")
### Signature analysis. MAF tool steps MAF -> trinucleotideMatrix() -> trinucleotideMatrix() -> plotCophenetic() -> extractSignatures() -> compareSignatures() -> plotSignatures()
library(NMF)
xrt_bca_sig <- estimateSignatures(mat = xrt_bca_tnm, nTry = 6)
### Differences in APOBEC enriched and non-enriched samples
plotApobecDiff(tnm = xrt_bca_tnm, maf = xrt_bca_maf, pVal = 0.05, )
xrt_bca_tnm <- trinucleotideMatrix(maf = xrt_bca_maf, prefix = "chr", add = TRUE, ref_genome = "BSgenome.Hsapiens.UCSC.hg19")
### Differences in APOBEC enriched and non-enriched samples
plotApobecDiff(tnm = xrt_bca_tnm, maf = xrt_bca_maf, pVal = 0.05, )
### Signature analysis. MAF tool steps MAF -> trinucleotideMatrix() -> trinucleotideMatrix() -> plotCophenetic() -> extractSignatures() -> compareSignatures() -> plotSignatures()
library(NMF)
xrt_bca_sig <- estimateSignatures(mat = xrt_bca_tnm, nTry = 6)
plotCophenetic(res = xrt_bca_sig, bestFit = 10)
plotCophenetic(res = xrt_bca_sig, bestFit = 4)
plotCophenetic(res = xrt_bca_sig, bestFit = 6)
plotCophenetic(res = xrt_bca_sig, bestFit = 6)
xrt_bca_sig <- estimateSignatures(mat = xrt_bca_tnm, nTry = 10)
## cophenetic plot showed biggest drop n=4
xrt_bca_sig <- extractSignatures(mat = xrt_bca_tnm, n= 4)
## Compare against version3 60 signatures
xrt_bca_v3_cosm <- compareSignatures(nmfRes = xrt_bca_sig, sig_db = "SBS")
## Compare against original 30 COSMIC signatures
xrt_bca_og30_cosm <- compareSignatures(nmfRes = xrt_bca_sig, sig_db = "legacy")
## Compare against version3 60 signatures
xrt_bca_v3_cosm <- compareSignatures(nmfRes = xrt_bca_sig, sig_db = "SBS")
## Plots COSMIC signatures
pheatmap::pheatmap(mat = xrt_bca_v3_cosm$cosine_similarities, cluster_rows = FALSE, main = "cosine similarity against validated signatures")
## Plots COSMIC signatures
pheatmap::pheatmap(mat = xrt_bca_v3_cosm$cosine_similarities, cluster_rows = FALSE, main = "cosine similarity against validated signatures")
pheatmap::pheatmap(mat = xrt_bca_og30_cosm$cosine_similarities, cluster_rows = FALSE, main = "cosine similarity against validated signatures")
maftools::plotSignatures(nmfRes = xrt_bca_sig, title_size = 1.0, sig_db = "SBS")
maftools::plotSignatures(nmfRes = xrt_bca_sig, title_size = 1.0, sig_db = "legacy")
## signature 3D barplot
install.packages("barplot3d")
library(barplot3d)
sig1 <- xrt_bca_sig$signatures[,1]
barplot3d::legoplot3d(contextdata = sig1, labels = FALSE, scalexy = 0.01, sixcolors = "sanger")
## create a df with all the indels from df_reduced
df_indels <- subset(df_reduced, subset = Variant_Classification %in% c("In_Frame_Del", "In_Frame_Ins", "Frame_Shift_Del", "Frame_Shift_Ins")) %>% select(Tumor_Sample_Barcode, Variant_Classification)
### ==============================================================================================
###
## create a df with all the indels from df_reduced
df_indels <- subset(df_reduced, subset = Variant_Classification %in% c("In_Frame_Del", "In_Frame_Ins", "Frame_Shift_Del", "Frame_Shift_Ins"))
dim(df_indels) # 1122 2
tp53.df
tp53.df <- matrix(c(214,198,16,20), nrow = 2)
tp53.df
tp53.df <- matrix(c(214/412,198/412,15/29,14/29), nrow = 2)
rownames(tp53.df) <- c("Wt", "Mut")
colnames(tp53.df) <- c("TCGA", "Mouw")
barplot(as.matrix(tp53.df), main="TP53 mutations TCGA vs Mouw",
ylab="Fraction of Patients", col=c("blue","yellow"))
fisher.test(tp53.df)
tp53.df <- matrix(c(214/412,198/412,15/29,14/29), nrow = 2)
rownames(tp53.df) <- c("Wt", "Mut")
colnames(tp53.df) <- c("TCGA", "Mouw")
barplot(as.matrix(tp53.df), main="TP53 mutations TCGA vs Mouw",
ylab="Fraction of Patients", col=c("blue","yellow"))
tp53.df <- matrix(c(214/412,198/412,15/29,14/29), nrow = 2)
rownames(tp53.df) <- c("Wt", "Mut")
colnames(tp53.df) <- c("TCGA", "Mouw")
barplot(as.matrix(tp53.df), main="TP53 mutations TCGA vs Mouw",
ylab="Fraction of Patients", col=c("blue","yellow"))
tp53.df <- matrix(c(214/412,198/412,15/29,14/29), nrow = 2)
rownames(tp53.df) <- c("Wt", "Mut")
colnames(tp53.df) <- c("TCGA", "Mouw")
barplot(as.matrix(tp53.df), main="TP53 mutations TCGA vs Mouw",
ylab="Fraction of Patients", col=c("blue","yellow"))
fgfr3.df <- matrix(c(354/412,58/412,24/29,5/29), nrow = 2)
rownames(fgfr3.df) <- c("Wt", "Mut")
colnames(fgfr3.df) <- c("TCGA", "Mouw")
barplot(as.matrix(fgfr3.df), main="FGFR3 mutations TCGA vs Mouw",
ylab="Fraction of Patients", col=c("blue","yellow"))
fisher.test(fgfr3.df)
tp53.df <- matrix(c(214,198,15,14), nrow = 2)
fisher.test(tp53.df)
## ERBB2
erbb2.df <- matrix(c(362/412,50/412,26/29,3/29), nrow = 2)
rownames(erbb2.df) <- c("Wt", "Mut")
colnames(erbb2.df) <- c("TCGA", "Mouw")
barplot(as.matrix(erbb2.df), main="ERBB2 mutations TCGA vs Mouw",
ylab="Fraction of Patients", col=c("blue","yellow"))
fisher.test(erbb2.df)
## RB1
rb1.df <- matrix(c(340/412,72/412, 25/29, 4/29), nrow = 2)
rownames(rb1.df) <- c("Wt", "Mut")
colnames(rb1.df) <- c("TCGA", "Mouw")
barplot(as.matrix(rb1.df), main="RB1 mutations TCGA vs Mouw",
ylab="Fraction of Patients", col=c("blue","yellow"))
fisher.test(rb1.df)
tp53.df <- matrix(c(214,198,15,14), nrow = 2)
fisher.test(tp53.df)
fgfr3.df <- matrix(c(354,58,24,5), nrow = 2)
fisher.test(fgfr3.df)
erbb2.df <- matrix(c(362,50,26,3), nrow = 2)
fisher.test(erbb2.df)
rb1.df <- matrix(c(340,72, 25, 4), nrow = 2)
fisher.test(rb1.df)
